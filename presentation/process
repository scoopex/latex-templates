#!/bin/bash

##################################################################
## HELPERS

getStats(){
   local SRC_DIR="$1"
   MINUTES_PER_SLIDE=3
   local SLIDES="`find ../src/parts/ -name "*.tex" -exec cat {} \;|grep -v "\frametitle"|grep "\frame"|wc -l`"
   local SKIPSLIDES="`find ../src/parts/ -name "*.tex" -exec cat {} \;|grep "\Skipslide"|wc -l`"
   echo "Number of slides          : $SLIDES"
   echo "Number of skipable slides : $SKIPSLIDES"
   echo "Minutes per slide         : $MINUTES_PER_SLIDE"
   echo "Minutes                   : $(($SLIDES * $MINUTES_PER_SLIDE)) (skipable slides excluded $(( ( $SLIDES - $SKIPSLIDES ) * $MINUTES_PER_SLIDE )))"
}

##################################################################
if [ -z "$1" ];then
   echo "$0 [dev|final|clean]"
   exit 1
fi

WATCHDIR="$(dirname $(readlink -f $0 ))/src"
PAGE=${2:-1}


if (which evince &>/dev/null);then
   PDF="evince"
elif (which xpdf &>/dev/null);then
   PDF="xpdf -geometry 1000x900 vortrag.pdf ${PAGE}"
elif (which okular &>/dev/null);then
   PDF="okular vortrag.pdf"
else
   PDF="acroread vortrag.pdf"
fi
export PDF

mkdir -p tmp/
rm -rf tmp/*
cd tmp

if [ "$1" = "dev" ]; then
   while true;
     do
      pdflatex -interaction=nonstopmode -halt-on-error ../src/vortrag.tex \
         && pdflatex -interaction=nonstopmode -halt-on-error ../src/vortrag.tex 

      if ( !(ps auxwwww|grep "$PDF vortrag.pdf"|grep -q -v grep));then
         echo
         echo "execute :"
         echo "========================="
         echo "$PDF tmp/*.pdf"
         echo "========================="
         echo
         echo
         if [ -f vortrag.pdf ];then
            $PDF vortrag.pdf &
         fi
      fi
      getStats "$WATCHDIR"
      inotifywait --exclude "..*.swp" -e modify -r $WATCHDIR
     done
elif [ "$1" = "final" ]; then
    pdflatex ../src/vortrag.tex && echo "** first run finished" && \
    pdflatex ../src/vortrag.tex && echo "** second run finished" && \
    pdflatex ../src/vortrag.tex && echo "** third run finished" && \
    cp vortrag.pdf ../vortrag.pdf
    getStats "$WATCHDIR"
    if [ -f ../vortrag.pdf ];then
      $PDF ../vortrag.pdf
    fi
elif [ "$1" = "clean" ]; then
   echo "....cleaned"
   getStats "$WATCHDIR"
else
   getStats "$WATCHDIR"
fi


